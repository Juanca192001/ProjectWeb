Index: User/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.shortcuts import render, HttpResponse, redirect\r\nfrom django.urls import resolve\r\nimport json\r\ntimes = 0\r\n\r\ndef login(request):\r\n    global times\r\n    print('¡Página de inicio de sesión abierta!')\r\n    times += 1\r\n    if request.path == '/login/signin/':\r\n        report_loc = '../signin/'\r\n    else:\r\n        report_loc = 'signin/'\r\n    return render(request, 'login.html', {'loc': report_loc, 'error': ''})\r\n\r\ndef signin(request):\r\n    print('¡Solicitud de inicio de sesión realizada!')\r\n    print('Leyendo datos desde JSON')\r\n    json2 = open('user_data.json',)\r\n    data = json.load(json2)\r\n    l1 = data['u_data'][0]\r\n    emails = list(l1.keys())\r\n    passwords = list(l1.values())\r\n    json2.close()\r\n    print('Datos leídos desde JSON')\r\n    global times\r\n    times = times + 1\r\n    if request.path == '/login/signin/':\r\n        report_loc = '../signin/'\r\n    else:\r\n        report_loc = 'signin/'\r\n    email = request.POST['email']\r\n    password = request.POST['password']\r\n    if email in emails:\r\n        if passwords[emails.index(email)] == password:\r\n            times = 0\r\n            print('Usuario autenticado, devolviendo respuesta HTTP')\r\n            return redirect('home')\r\n        else:\r\n            print('Email != Contraseña, devolviendo respuesta HTTP')\r\n            return render(request, 'login.html', {\r\n                'loc': report_loc,\r\n                'errorclass': 'alert alert-danger',\r\n                'error': 'Lo sentimos. El email y la contraseña no coinciden.'\r\n            })\r\n    else:\r\n        print('La cuenta no existe, devolviendo respuesta HTTP')\r\n        return render(request, 'login.html', {\r\n            'loc': report_loc,\r\n            'errorclass': 'alert alert-danger',\r\n            'error': 'Lo sentimos. La cuenta no existe. ¡Considere registrarse!'\r\n        })\r\n\r\ndef register(request):\r\n    global times\r\n    print('¡Página de registro abierta!')\r\n    times += 1\r\n    current_url = request.path\r\n    print(current_url)\r\n    print(0)\r\n    if request.path == '/register/signup/':\r\n        report_loc = '../signup/'\r\n    else:\r\n        report_loc = 'signup/'\r\n    return render(request, 'register.html', {'loc': report_loc, 'error': ''})\r\n\r\ndef signup(request):\r\n    print('¡Solicitud de registro realizada!')\r\n    print('Leyendo datos desde JSON')\r\n    if request.path == '/register/signup/':\r\n        report_loc = '../signup/'\r\n    else:\r\n        report_loc = 'signup/'\r\n    json2 = open('user_data.json',)\r\n    data = json.load(json2)\r\n    l1 = data['u_data'][0]\r\n    emails = list(l1.keys())\r\n    passwords = list(l1.values())\r\n    json2.close()\r\n    print('Datos leídos desde JSON')\r\n    email = request.POST['email']\r\n    password = request.POST['password']\r\n    password1 = request.POST['password1']\r\n    usernames = []\r\n    if email not in emails:\r\n        if password == password1:\r\n            emails.append(email)\r\n            passwords.append(password)\r\n            d4 = {emails[len(emails)-1]: passwords[len(emails)-1]}\r\n            for x in range(len(emails)-1):\r\n                d4 = dict(list(d4.items()) + list({emails[x]: passwords[x]}.items()))\r\n            json_object = '{\"u_data\": [' + json.dumps(d4, indent=4) + ']}'\r\n            a = open('user_data.json', 'w')\r\n            a.write(json_object)\r\n            a.close()\r\n            times = 0\r\n            print('Nuevo usuario registrado, devolviendo respuesta HTTP')\r\n            return redirect('login')\r\n        else:\r\n            print('Las contraseñas no coinciden, devolviendo respuesta HTTP')\r\n            return render(request, 'register.html', {\r\n                'loc': report_loc,\r\n                'errorclass': 'alert alert-danger',\r\n                'error': 'Lo sentimos. Las contraseñas no coinciden.'\r\n            })\r\n    else:\r\n        print('El nombre de usuario o el correo ya están en uso, devolviendo respuesta HTTP')\r\n        return render(request, 'register.html', {\r\n            'loc': report_loc,\r\n            'errorclass': 'alert alert-danger',\r\n            'error': 'Lo sentimos. El nombre de usuario o el correo ya están en uso.'\r\n        })\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/User/views.py b/User/views.py
--- a/User/views.py	(revision d0ad0f48a01ad59a1efbe8e540b6cbf6337901e5)
+++ b/User/views.py	(date 1744484454149)
@@ -35,6 +35,8 @@
         if passwords[emails.index(email)] == password:
             times = 0
             print('Usuario autenticado, devolviendo respuesta HTTP')
+            # Guardar el email en la sesión para indicar que el usuario inició sesión
+            request.session['email'] = email
             return redirect('home')
         else:
             print('Email != Contraseña, devolviendo respuesta HTTP')
@@ -110,3 +112,8 @@
             'errorclass': 'alert alert-danger',
             'error': 'Lo sentimos. El nombre de usuario o el correo ya están en uso.'
         })
+
+def logout(request):
+    # Función para cerrar sesión: elimina la información almacenada en la sesión
+    request.session.flush()
+    return redirect('home')
Index: DjangoProject/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\r\nURL configuration for DjangoProject project.\r\nThe `urlpatterns` list routes URLs to views. For more information please see:\r\n    https://docs.djangoproject.com/en/5.2/topics/http/urls/\r\nExamples:\r\nFunction views\r\n    1. Add an import:  from my_app import views\r\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\r\nClass-based views\r\n    1. Add an import:  from other_app.views import Home\r\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\r\nIncluding another URLconf\r\n    1. Import the include() function: from django.urls import include, path\r\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\r\n\"\"\"\r\nfrom django.contrib import admin\r\nfrom django.urls import path\r\nfrom ProyectoWeb.views import home\r\nfrom User.views import login,signin, register, signup\r\n\r\nurlpatterns = [\r\n    path('admin/', admin.site.urls),\r\n    path('', home, name='home'),\r\n    path('login/', login, name='login'),\r\n    path('login/signin/', signin, name='signin'),\r\n    path('register/', register, name='register'),\r\n    path('register/signup/', signup, name='signup'),\r\n\r\n]\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/DjangoProject/urls.py b/DjangoProject/urls.py
--- a/DjangoProject/urls.py	(revision d0ad0f48a01ad59a1efbe8e540b6cbf6337901e5)
+++ b/DjangoProject/urls.py	(date 1744484527999)
@@ -16,7 +16,7 @@
 from django.contrib import admin
 from django.urls import path
 from ProyectoWeb.views import home
-from User.views import login,signin, register, signup
+from User.views import login, signin, register, signup, logout
 
 urlpatterns = [
     path('admin/', admin.site.urls),
@@ -25,5 +25,5 @@
     path('login/signin/', signin, name='signin'),
     path('register/', register, name='register'),
     path('register/signup/', signup, name='signup'),
-
+    path('logout/', logout, name='logout'),
 ]
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2a83bdb2-0104-413e-903b-585aabd9f49a\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/DjangoProject.iml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\"><![CDATA[{\r\n  \"associatedIndex\": 3\r\n}]]></component>\r\n  <component name=\"ProjectId\" id=\"2vOZVi2qYGdd4ZrGek0MHRgL3Ro\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenDjangoStructureViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"master\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"DjangoProject\" type=\"Python.DjangoServer\" factoryName=\"Django server\">\r\n      <module name=\"DjangoProject\" />\r\n      <option name=\"ENV_FILES\" value=\"\" />\r\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <envs>\r\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\r\n      </envs>\r\n      <option name=\"SDK_HOME\" value=\"\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"\" />\r\n      <option name=\"IS_MODULE_SDK\" value=\"false\" />\r\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\r\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\r\n      <option name=\"launchJavascriptDebuger\" value=\"false\" />\r\n      <option name=\"port\" value=\"8000\" />\r\n      <option name=\"host\" value=\"\" />\r\n      <option name=\"additionalOptions\" value=\"\" />\r\n      <option name=\"browserUrl\" value=\"\" />\r\n      <option name=\"runTestServer\" value=\"false\" />\r\n      <option name=\"runNoReload\" value=\"false\" />\r\n      <option name=\"useCustomRunCommand\" value=\"false\" />\r\n      <option name=\"customRunCommand\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-PY-243.26053.29\" />\r\n        <option value=\"bundled-python-sdk-b1dbf8ef85a6-4df51de95216-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-243.26053.29\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2a83bdb2-0104-413e-903b-585aabd9f49a\" name=\"Changes\" comment=\"\" />\r\n      <created>1744018106416</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1744018106416</updated>\r\n      <workItem from=\"1744018107292\" duration=\"418000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d0ad0f48a01ad59a1efbe8e540b6cbf6337901e5)
+++ b/.idea/workspace.xml	(date 1744484695131)
@@ -1,12 +1,17 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="AutoImportSettings">
+    <option name="autoReloadType" value="SELECTIVE" />
+  </component>
   <component name="ChangeListManager">
     <list default="true" id="2a83bdb2-0104-413e-903b-585aabd9f49a" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/DjangoProject.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/DjangoProject.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/DjangoProject.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/DjangoProject/urls.py" beforeDir="false" afterPath="$PROJECT_DIR$/DjangoProject/urls.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/User/views.py" beforeDir="false" afterPath="$PROJECT_DIR$/User/views.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/db.sqlite3" beforeDir="false" afterPath="$PROJECT_DIR$/db.sqlite3" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -16,9 +21,9 @@
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 3
-}]]></component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 3
+}</component>
   <component name="ProjectId" id="2vOZVi2qYGdd4ZrGek0MHRgL3Ro" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -27,9 +32,13 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Django Server.DjangoProject.executor": "Run",
     "RunOnceActivity.OpenDjangoStructureViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master",
+    "RunOnceActivity.pycharm.django.structure.promotion.once.per.project": "true",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "git-widget-placeholder": "Login",
+    "node.js.selected.package.tslint": "(autodetect)",
     "nodejs_package_manager_path": "npm",
     "vue.rearranger.settings.migration": "true"
   }
@@ -42,6 +51,7 @@
       <option name="PARENT_ENVS" value="true" />
       <envs>
         <env name="PYTHONUNBUFFERED" value="1" />
+        <env name="DJANGO_SETTINGS_MODULE" value="DjangoProject.settings" />
       </envs>
       <option name="SDK_HOME" value="" />
       <option name="WORKING_DIRECTORY" value="" />
Index: .idea/DjangoProject.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"django\" name=\"Django\">\r\n      <configuration>\r\n        <option name=\"rootFolder\" value=\"$MODULE_DIR$\" />\r\n        <option name=\"settingsModule\" value=\"DjangoProject/settings.py\" />\r\n        <option name=\"manageScript\" value=\"$MODULE_DIR$/manage.py\" />\r\n        <option name=\"environment\" value=\"&lt;map/&gt;\" />\r\n        <option name=\"doNotUseTestRunner\" value=\"false\" />\r\n        <option name=\"trackFilePattern\" value=\"migrations\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/.venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.12 (DjangoProject)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n  <component name=\"TemplatesService\">\r\n    <option name=\"TEMPLATE_CONFIGURATION\" value=\"Django\" />\r\n    <option name=\"TEMPLATE_FOLDERS\">\r\n      <list>\r\n        <option value=\"$MODULE_DIR$/../DjangoProject\\templates\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/DjangoProject.iml b/.idea/DjangoProject.iml
--- a/.idea/DjangoProject.iml	(revision d0ad0f48a01ad59a1efbe8e540b6cbf6337901e5)
+++ b/.idea/DjangoProject.iml	(date 1744480630261)
@@ -16,7 +16,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/.venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.12 (DjangoProject)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="Python 3.13" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
   <component name="TemplatesService">
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
new file mode 100644
--- /dev/null	(date 1744481825989)
+++ b/.idea/dataSources.xml	(date 1744481825989)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
+    <data-source source="LOCAL" name="db" uuid="65b21f3c-a85c-4f3c-a779-b8d4134bba5d">
+      <driver-ref>sqlite.xerial</driver-ref>
+      <synchronize>true</synchronize>
+      <jdbc-driver>org.sqlite.JDBC</jdbc-driver>
+      <jdbc-url>jdbc:sqlite:D:\Python projects\ProjectWeb\db.sqlite3</jdbc-url>
+      <working-dir>$ProjectFileDir$</working-dir>
+    </data-source>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Black\">\r\n    <option name=\"sdkName\" value=\"Python 3.12 (DjangoProject)\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision d0ad0f48a01ad59a1efbe8e540b6cbf6337901e5)
+++ b/.idea/misc.xml	(date 1744480630264)
@@ -3,4 +3,5 @@
   <component name="Black">
     <option name="sdkName" value="Python 3.12 (DjangoProject)" />
   </component>
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.13" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
